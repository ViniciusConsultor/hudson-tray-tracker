<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAABAQAAABAAgAaAUAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAI
        AAAAAAAAAAAAAAAAAAAAAAAAvm4A/7hrAP+yZwD/rGQA/6ZgAP+hXQD/m1oA/5VWAP+PUwD/iVAA/4RM
        AP9/SgD/f0oA/39KAP9/SgD/f0oA/8NxAP+9bgD/uGsA/7JnAP+sZAD/pmAA/6FdAP+bWgD/lVYA/49T
        AP+JUAD/hEwA/39KAP9/SgD/f0oA/39KAP/JdAD/w3EA/71uAP+4awD/smcA/6xkAP+mYAD/oF0A/8qo
        ev/Cnm7/j1MA/4lQAP/ApH7/tphu/39KAP9/SgD/z3gA/8l0AP/DcQD/vW4A/7dqAP+yZwD/rGQA/6Zg
        AP/hzLD/2L+e/5VWAP+PUwD/3cy2/8+6nv9/SgD/f0oA/9R7AP/OeAD/yXQA/8NxAP+9bgD/t2oA/7Jn
        AP+sZAD/482w/9rBnv+aWQD/lVYA/97Ntv/SvJ7/g0wA/39KAP/afgD/1HsA/854AP/JdAD/w3EA/71t
        AP+3agD/sWcA/+XOsP/48uv/7N7M/+rdzP/49fD/1L2e/4lPAP+DTAD/4IIA/9p+AP/UewD/zngA/8h0
        AP/DcQD/vW0A/7dqAP/mz7D/6NW7/8CQTf+8jU3/6t3L/9a+nv+OUgD/iU8A/+WFAP/fggD/2n4A/9R7
        AP/OeAD/yHQA/8NxAP+9bQD/6NCw/+HFnv+rYwD/pmAA/+PQtv/Yv57/lFYA/45SAP/riAD/5YUA/9+C
        AP/afgD/1HsA/853AP/IdAD/wnAA/+fMpv/hwZb/sWcA/6tjAP/hy6z/17yW/5pZAP+UVgD/8YwA/+uI
        AP/lhQD/34IA/9l+AP/UewD/zncA/8h0AP/CcAD/vG0A/7dqAP+xZwD/q2MA/6VgAP+fXAD/mlkA//aP
        AP/wiwD/64gA/+WFAP/fggD/2X4A/9N6AP/OdwD/yHQA/8JwAP+8bQD/t2oA/7FnAP+rYwD/pWAA/59c
        AP/8kgD/9o8A//CLAP/riAD/5YUA/9+BAP/ZfgD/03oA/853AP/IdAD/wnAA/7xtAP+2agD/sWcA/6tj
        AP+lYAD/+5IA//ySAP/2jwD/8IsA/+qIAP/lhQD/34EA/9l+AP/TegD/zXcA/8h0AP/CcAD/vG0A/7Zq
        AP+wZgD/q2MA//aPAP/8kgD//JIA//aPAP/wiwD/6ogA/+SEAP/fgQD/2X4A/9N6AP/NdwD/yHQA/8Jw
        AP+8bQD/tmoA/7BmAP/wiwD/9o8A//ySAP/8kgD/9o8A//CLAP/qiAD/5IQA/9+BAP/ZfgD/03oA/813
        AP/HdAD/wnAA/7xtAP+2agD/6ogA//CLAP/2jwD//JIA//uSAP/2jwD/8IsA/+qIAP/khAD/3oEA/9l+
        AP/TegD/zXcA/8d0AP/BcAD/vG0A/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAEAAAACAAAAABAAgAAAAAAAACAAAAAAAAAAAAAAAA
        AAAAAAAAf0oA/4NMAP+ETAD/iU8A/4lQAP+OUgD/j1MA/5RWAP+VVgD/mlkA/5taAP+fXAD/oF0A/6Fd
        AP+lYAD/pmAA/6tjAP+sZAD/sGYA/7FnAP+yZwD/tmoA/7dqAP+4awD/vG0A/71tAP+9bgD/vm4A/8Fw
        AP/CcAD/w3EA/8d0AP/IdAD/yXQA/813AP/OdwD/zngA/894AP/TegD/1HsA/9l+AP/afgD/3oEA/9+B
        AP/fggD/4IIA/+SEAP/lhQD/6ogA/+uIAP/wiwD/8YwA//aPAP/7kgD//JIA/7yNTf+2mG7/wJBN/8Ke
        bv/ApH7/yqh6/8+6nv/XvJb/0rye/9S9nv/Wvp7/2L+e/9rBnv/hwZb/4cWe/93Mtv/ezbb/58ym/+HL
        rP/hzLD/482w/+XOsP/mz7D/49C2/+jQsP/o1bv/6t3L/+rdzP/s3sz/+PLr//j18P8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAABsXFBEPDQoIBgQCAAAAAAAeGhcUEQ8NCggGBAIAAAAAIR4aFxQRDww8OgYEOzgAACUh
        HhoWFBEPSkIIBkY9AAAnJCEeGhYUEUtDCQhHPwEAKSckIR4ZFhNMVFNSVUADAS0pJyQgHhkWTVA5N1FB
        BQMvLCknJCAeGU9FEA9OQgcFMS8sKScjIB1IRBMQST4JBzMxLywoJyMgHRgWExAOCwk0MjEvLCgmIyAd
        GBYTEA4LNjQyMS8rKCYjIB0YFRMQDjU2NDIwLysoJiIgHRgVEhA0NjY0MjAuKygmIiAdGBUSMjQ2NjQy
        MC4rKCYiHx0YFTAyNDY1NDIwLiooJiIfHBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>